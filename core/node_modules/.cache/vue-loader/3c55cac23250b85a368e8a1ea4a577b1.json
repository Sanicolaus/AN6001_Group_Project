{"remainingRequest":"D:\\Project\\ChatApp\\client_v3\\core\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\ChatApp\\client_v3\\core\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\ChatApp\\client_v3\\core\\src\\App.vue","mtime":1603194202071},{"path":"D:\\Project\\ChatApp\\client_v3\\core\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\ChatApp\\client_v3\\core\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbWVzc2FnZUhpc3RvcnkgZnJvbSAiLi9tZXNzYWdlSGlzdG9yeSI7DQppbXBvcnQgY2hhdFBhcnRpY2lwYW50cyBmcm9tICIuL2NoYXRQcm9maWxlcyI7DQppbXBvcnQgYXZhaWxhYmxlQ29sb3JzIGZyb20gIi4vY29sb3JzIjsNCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogImFwcCIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHBhcnRpY2lwYW50czogY2hhdFBhcnRpY2lwYW50cywNCiAgICAgIHRpdGxlSW1hZ2VVcmw6DQogICAgICAgICJodHRwczovL2Euc2xhY2stZWRnZS5jb20vNjZmOS9pbWcvYXZhdGFycy10ZWFtcy9hdmFfMDAwMS0zNC5wbmciLA0KICAgICAgLy8gbWVzc2FnZUxpc3Q6IG1lc3NhZ2VIaXN0b3J5LA0KICAgICAgbWVzc2FnZUxpc3Q6IFsNCiAgICAgICAgeyB0eXBlOiAidGV4dCIsIGF1dGhvcjogYGJvdGAsIGlkOiAwLCBkYXRhOiB7IHRleHQ6IGBIZWxsb2AgfSB9LA0KICAgICAgXSwNCiAgICAgIG5ld01lc3NhZ2VzQ291bnQ6IDAsDQogICAgICBpc0NoYXRPcGVuOiB0cnVlLA0KICAgICAgc2hvd1R5cGluZ0luZGljYXRvcjogIiIsDQogICAgICBjb2xvcnM6IG51bGwsDQogICAgICBhdmFpbGFibGVDb2xvcnMsDQogICAgICBjaG9zZW5Db2xvcjogbnVsbCwNCiAgICAgIGFsd2F5c1Njcm9sbFRvQm90dG9tOiB0cnVlLA0KICAgICAgbWVzc2FnZVN0eWxpbmc6IHRydWUsDQogICAgICB1c2VySXNUeXBpbmc6IGZhbHNlLA0KICAgIH07DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5zZXRDb2xvcigiYmx1ZSIpOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgc2VuZE1lc3NhZ2UodGV4dCkgew0KICAgICAgaWYgKHRleHQubGVuZ3RoID4gMCkgew0KICAgICAgICAvLyB0aGlzLm5ld01lc3NhZ2VzQ291bnQgPSB0aGlzLmlzQ2hhdE9wZW4/dGhpcy5uZXdNZXNzYWdlc0NvdW50OnRoaXMubmV3TWVzc2FnZXNDb3VudCsxDQogICAgICAgIHRoaXMub25NZXNzYWdlV2FzU2VudCh7DQogICAgICAgICAgYXV0aG9yOiAibWUiLA0KICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwNCiAgICAgICAgICBpZDogTWF0aC5yYW5kb20oKSwNCiAgICAgICAgICBkYXRhOiB7IHRleHQgfSwNCiAgICAgICAgfSk7DQogICAgICB9DQogICAgfSwNCiAgICBoYW5kbGVUeXBpbmcodGV4dCkgew0KICAgICAgdGhpcy5zaG93VHlwaW5nSW5kaWNhdG9yID0NCiAgICAgICAgdGV4dC5sZW5ndGggPiAwDQogICAgICAgICAgPyB0aGlzLnBhcnRpY2lwYW50c1t0aGlzLnBhcnRpY2lwYW50cy5sZW5ndGggLSAxXS5pZA0KICAgICAgICAgIDogIiI7DQogICAgfSwNCiAgICBhc3luYyBnZXRSZXNwb25zZShxdWVzdGlvbikgew0KICAgICAgdHJ5IHsNCiAgICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwOi8vbG9jYWxob3N0OjUwMDAvYXNrZWQvJHtxdWVzdGlvbn1gKQ0KICAgICAgICB0aGlzLm1lc3NhZ2VMaXN0PVsNCiAgICAgICAgICAuLi50aGlzLm1lc3NhZ2VMaXN0LCANCiAgICAgICAgICB7DQogICAgICAgICAgICBhdXRob3I6ICJib3QiLA0KICAgICAgICAgICAgdHlwZTogInRleHQiLA0KICAgICAgICAgICAgaWQ6IE1hdGgucmFuZG9tKCksDQogICAgICAgICAgICBkYXRhOiB7dGV4dDogcmVzcG9uc2UuZGF0YX0sDQogICAgICAgICAgICBzdWdnZXN0aW9uczogWyJZZXMiLCAiTm8iXQ0KICAgICAgICAgIH0sDQogICAgICAgIF0NCiAgICAgIH1jYXRjaChlcnIpe2NvbnNvbGUud2FybihlcnIpfQ0KICAgIH0sDQogICAgb25NZXNzYWdlV2FzU2VudChtZXNzYWdlKSB7DQogICAgICB0aGlzLm1lc3NhZ2VMaXN0ID0gWw0KICAgICAgICAuLi50aGlzLm1lc3NhZ2VMaXN0LA0KICAgICAgICBPYmplY3QuYXNzaWduKHt9LCBtZXNzYWdlLCB7IGlkOiBNYXRoLnJhbmRvbSgpIH0pLA0KICAgICAgXTsNCiAgICAgIGxldCByZXNwb25zZVRleHQgPSAiR290IGl0IjsNCiAgICAgIHRoaXMuZ2V0UmVzcG9uc2UobWVzc2FnZS5kYXRhLnRleHQpOw0KICAgIH0sDQogICAgc2V0Q29sb3IoY29sb3IpIHsNCiAgICAgIHRoaXMuY29sb3JzID0gdGhpcy5hdmFpbGFibGVDb2xvcnNbY29sb3JdOw0KICAgICAgdGhpcy5jaG9zZW5Db2xvciA9IGNvbG9yOw0KICAgIH0sDQogICAgc2hvd1N0eWxpbmdJbmZvKCkgew0KICAgICAgdGhpcy4kbW9kYWwuc2hvdygiZGlhbG9nIiwgew0KICAgICAgICB0aXRsZTogIkluZm8iLA0KICAgICAgICB0ZXh0Og0KICAgICAgICAgICJZb3UgY2FuIHVzZSAqd29yZCogdG8gPHN0cm9uZz5ib2xkaWZ5PC9zdHJvbmc+LCAvd29yZC8gdG8gPGVtPmVtcGhhc2l6ZTwvZW0+LCBfd29yZF8gdG8gPHU+dW5kZXJsaW5lPC91PiwgYGNvZGVgIHRvIDxjb2RlPndyaXRlID0gY29kZTs8L2NvZGU+LCB+dGhpc34gdG8gPGRlbD5kZWxldGU8L2RlbD4gYW5kIF5zdXBeIG9yIMKhc3ViwqEgdG8gd3JpdGUgPHN1cD5zdXA8L3N1cD4gYW5kIDxzdWI+c3ViPC9zdWI+IiwNCiAgICAgIH0pOw0KICAgIH0sDQogICAgbWVzc2FnZVN0eWxpbmdUb2dnbGVkKGUpIHsNCiAgICAgIHRoaXMubWVzc2FnZVN0eWxpbmcgPSBlLnRhcmdldC5jaGVja2VkOw0KICAgIH0sDQogICAgaGFuZGxlT25UeXBlKCkgew0KICAgICAgdGhpcy4kcm9vdC4kZW1pdCgib25UeXBlIik7DQogICAgICB0aGlzLnVzZXJJc1R5cGluZyA9IHRydWU7DQogICAgfSwNCiAgICBlZGl0TWVzc2FnZShtZXNzYWdlKSB7DQogICAgICBjb25zdCBtID0gdGhpcy5tZXNzYWdlTGlzdC5maW5kKChtKSA9PiBtLmlkID09PSBtZXNzYWdlLmlkKTsNCiAgICAgIG0uaXNFZGl0ZWQgPSB0cnVlOw0KICAgICAgbS5kYXRhLnRleHQgPSBtZXNzYWdlLmRhdGEudGV4dDsNCiAgICB9LA0KICAgIHJlbW92ZU1lc3NhZ2UobWVzc2FnZSkgew0KICAgICAgY29uc3QgbSA9IHRoaXMubWVzc2FnZUxpc3QuZmluZCgobSkgPT4gbS5pZCA9PT0gbWVzc2FnZS5pZCk7DQogICAgICBtLnR5cGUgPSAic3lzdGVtIjsNCiAgICAgIG0uZGF0YS50ZXh0ID0gIlRoaXMgbWVzc2FnZSBoYXMgYmVlbiByZW1vdmVkIjsNCiAgICB9LA0KICAgIGxpa2UoaWQpIHsNCiAgICAgIGNvbnN0IG0gPSB0aGlzLm1lc3NhZ2VMaXN0LmZpbmRJbmRleCgobSkgPT4gbS5pZCA9PT0gaWQpOw0KICAgICAgdmFyIG1zZyA9IHRoaXMubWVzc2FnZUxpc3RbbV07DQogICAgICBtc2cubGlrZWQgPSAhbXNnLmxpa2VkOw0KICAgICAgdGhpcy4kc2V0KHRoaXMubWVzc2FnZUxpc3QsIG0sIG1zZyk7DQogICAgfSwNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBsaW5rQ29sb3IoKSB7DQogICAgICByZXR1cm4gdGhpcy5jaG9zZW5Db2xvciA9PT0gImRhcmsiDQogICAgICAgID8gdGhpcy5jb2xvcnMuc2VudE1lc3NhZ2UudGV4dA0KICAgICAgICA6IHRoaXMuY29sb3JzLmxhdW5jaGVyLmJnOw0KICAgIH0sDQogICAgYmFja2dyb3VuZENvbG9yKCkgew0KICAgICAgcmV0dXJuIHRoaXMuY2hvc2VuQ29sb3IgPT09ICJkYXJrIiA/IHRoaXMuY29sb3JzLm1lc3NhZ2VMaXN0LmJnIDogIiNmZmYiOw0KICAgIH0sDQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5tZXNzYWdlTGlzdC5mb3JFYWNoKCh4KSA9PiAoeC5saWtlZCA9IGZhbHNlKSk7DQogIH0sDQp9Ow0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div :style=\"{ background: backgroundColor }\" id=\"app\">\r\n    <beautiful-chat\r\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\r\n      :close=\"() => {}\"\r\n      :colors=\"colors\"\r\n      :isOpen=\"true\"\r\n      :messageList=\"messageList\"\r\n      :messageStyling=\"messageStyling\"\r\n      :newMessagesCount=\"newMessagesCount\"\r\n      :sendMessage=\"sendMessage\"\r\n      :onMessageWasSent=\"onMessageWasSent\"\r\n      :open=\"() => {}\"\r\n      :participants=\"participants\"\r\n      :showCloseButton=\"false\"\r\n      :showLauncher=\"false\"\r\n      :showEmoji=\"true\"\r\n      :showFile=\"true\"\r\n      :showTypingIndicator=\"showTypingIndicator\"\r\n      :showEdition=\"true\"\r\n      :showDeletion=\"true\"\r\n      :showConfirmationDeletion=\"true\"\r\n      :confirmationDeletionMessage=\"'Are you sure to delete this?'\"\r\n      :titleImageUrl=\"titleImageUrl\"\r\n      @onType=\"handleOnType\"\r\n      @edit=\"editMessage\"\r\n      @remove=\"removeMessage\"\r\n    >\r\n      <template v-slot:header>\r\n        <h2>AI Diagnose Bot</h2>\r\n      </template>\r\n    </beautiful-chat>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport messageHistory from \"./messageHistory\";\r\nimport chatParticipants from \"./chatProfiles\";\r\nimport availableColors from \"./colors\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"app\",\r\n  data() {\r\n    return {\r\n      participants: chatParticipants,\r\n      titleImageUrl:\r\n        \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\",\r\n      // messageList: messageHistory,\r\n      messageList: [\r\n        { type: \"text\", author: `bot`, id: 0, data: { text: `Hello` } },\r\n      ],\r\n      newMessagesCount: 0,\r\n      isChatOpen: true,\r\n      showTypingIndicator: \"\",\r\n      colors: null,\r\n      availableColors,\r\n      chosenColor: null,\r\n      alwaysScrollToBottom: true,\r\n      messageStyling: true,\r\n      userIsTyping: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.setColor(\"blue\");\r\n  },\r\n  methods: {\r\n    sendMessage(text) {\r\n      if (text.length > 0) {\r\n        // this.newMessagesCount = this.isChatOpen?this.newMessagesCount:this.newMessagesCount+1\r\n        this.onMessageWasSent({\r\n          author: \"me\",\r\n          type: \"text\",\r\n          id: Math.random(),\r\n          data: { text },\r\n        });\r\n      }\r\n    },\r\n    handleTyping(text) {\r\n      this.showTypingIndicator =\r\n        text.length > 0\r\n          ? this.participants[this.participants.length - 1].id\r\n          : \"\";\r\n    },\r\n    async getResponse(question) {\r\n      try {\r\n        let response = await axios.get(`http://localhost:5000/asked/${question}`)\r\n        this.messageList=[\r\n          ...this.messageList, \r\n          {\r\n            author: \"bot\",\r\n            type: \"text\",\r\n            id: Math.random(),\r\n            data: {text: response.data},\r\n            suggestions: [\"Yes\", \"No\"]\r\n          },\r\n        ]\r\n      }catch(err){console.warn(err)}\r\n    },\r\n    onMessageWasSent(message) {\r\n      this.messageList = [\r\n        ...this.messageList,\r\n        Object.assign({}, message, { id: Math.random() }),\r\n      ];\r\n      let responseText = \"Got it\";\r\n      this.getResponse(message.data.text);\r\n    },\r\n    setColor(color) {\r\n      this.colors = this.availableColors[color];\r\n      this.chosenColor = color;\r\n    },\r\n    showStylingInfo() {\r\n      this.$modal.show(\"dialog\", {\r\n        title: \"Info\",\r\n        text:\r\n          \"You can use *word* to <strong>boldify</strong>, /word/ to <em>emphasize</em>, _word_ to <u>underline</u>, `code` to <code>write = code;</code>, ~this~ to <del>delete</del> and ^sup^ or ¡sub¡ to write <sup>sup</sup> and <sub>sub</sub>\",\r\n      });\r\n    },\r\n    messageStylingToggled(e) {\r\n      this.messageStyling = e.target.checked;\r\n    },\r\n    handleOnType() {\r\n      this.$root.$emit(\"onType\");\r\n      this.userIsTyping = true;\r\n    },\r\n    editMessage(message) {\r\n      const m = this.messageList.find((m) => m.id === message.id);\r\n      m.isEdited = true;\r\n      m.data.text = message.data.text;\r\n    },\r\n    removeMessage(message) {\r\n      const m = this.messageList.find((m) => m.id === message.id);\r\n      m.type = \"system\";\r\n      m.data.text = \"This message has been removed\";\r\n    },\r\n    like(id) {\r\n      const m = this.messageList.findIndex((m) => m.id === id);\r\n      var msg = this.messageList[m];\r\n      msg.liked = !msg.liked;\r\n      this.$set(this.messageList, m, msg);\r\n    },\r\n  },\r\n  computed: {\r\n    linkColor() {\r\n      return this.chosenColor === \"dark\"\r\n        ? this.colors.sentMessage.text\r\n        : this.colors.launcher.bg;\r\n    },\r\n    backgroundColor() {\r\n      return this.chosenColor === \"dark\" ? this.colors.messageList.bg : \"#fff\";\r\n    },\r\n  },\r\n  mounted() {\r\n    this.messageList.forEach((x) => (x.liked = false));\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  padding: 0px;\r\n  margin: 0px;\r\n}\r\n\r\n* {\r\n  font-family: Avenir Next, Helvetica Neue, Helvetica, sans-serif;\r\n}\r\n</style>\r\n"]}]}